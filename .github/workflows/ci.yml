name: CI

on:
  push:
    branches:
      - release
      - release/*
      - feature/*
      - develop
      - master

    tags:
      - '*'

env:
  NPM_TOKEN: ${{secrets.GA_TOKEN}}

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Extract tag
        id: extract-tag
        run: echo "::set-output name=tag::${GITHUB_REF/refs\/tags\//}"

      - name: Check tag
        run: echo ${{ steps.extract-tag.outputs.tag }}

      - name: Extract branch
        id: extract-branch
        run: echo "::set-output name=branch::${GITHUB_REF/refs\/heads\//}"

      - name: Check branch
        run: echo ${{ steps.extract-branch.outputs.branch }}

      - uses: actions/setup-node@v1
        with:
          node-version: 14

      - run: npm run bootstrap

      - run: npm run lint

      - run: npm run build

      - run: npm run test:ci

  release:
    name: Create release
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false

  publish-npm:
    name: Publish NPM package
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com/

      - run: npm run bootstrap

      - run: npm run build

      - run: npm publish packages/semcom-core
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - run: npm publish packages/semcom-node
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - run: npm publish packages/semcom-sdk
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  publish-docker:
    name: Publish Docker image
    needs: publish-npm
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v2

      - name: Extract tag
        id: extract-tag
        run: echo "::set-output name=tag::${GITHUB_REF/refs\/tags\//}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GA_TOKEN }}

      - name: Build and push semcom node
        id: docker_build_semcom_node
        uses: docker/build-push-action@v2
        with:
          context: packages/semcom-node/
          push: true
          tags: ghcr.io/digita-ai/semcom-node:${{ steps.extract-tag.outputs.tag }}
          build-args: |
            NPM_TOKEN=${{secrets.GA_TOKEN}}

      - name: Build and push semcom components
        id: docker_build_semcom_components
        uses: docker/build-push-action@v2
        with:
          context: packages/semcom-components/
          push: true
          tags: ghcr.io/digita-ai/semcom-components:${{ steps.extract-tag.outputs.tag }}
          build-args: |
            NPM_TOKEN=${{secrets.GA_TOKEN}}

      - name: Build and push semcom demo app
        id: docker_build_semcom_demo
        uses: docker/build-push-action@v2
        with:
          context: packages/semcom-demo-app/
          push: true
          tags: ghcr.io/digita-ai/semcom-demo-app:${{ steps.extract-tag.outputs.tag }}
          build-args: |
            NPM_TOKEN=${{secrets.GA_TOKEN}}

      - name: Build and push semcom demo pods
        id: docker_build_semcom_demo_pods
        uses: docker/build-push-action@v2
        with:
          context: packages/semcom-demo-pods/
          push: true
          tags: ghcr.io/digita-ai/semcom-demo-pods:${{ steps.extract-tag.outputs.tag }}
          build-args: |
            NPM_TOKEN=${{secrets.GA_TOKEN}}

  deploy-develop:
    name: Deploy to develop
    needs: publish-docker
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v2

      - name: Extract tag
        id: extract-tag
        run: echo "::set-output name=tag::${GITHUB_REF/refs\/tags\//}"

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GA_TOKEN }}

      - name: Deploy semcom node on develop
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: semcom-node-develop
          image: ghcr.io/digita-ai/semcom-node:${{ steps.extract-tag.outputs.tag }}
          registry-login-server: ghcr.io
          registry-username: ${{ secrets.GA_USERNAME }}
          registry-password: ${{ secrets.GA_TOKEN }}
          name: semcom-node-develop
          location: 'west europe'
          ports: 3000

      - name: Deploy semcom components on develop
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: semcom-components-develop
          image: ghcr.io/digita-ai/semcom-components:${{ steps.extract-tag.outputs.tag }}
          registry-login-server: ghcr.io
          registry-username: ${{ secrets.GA_USERNAME }}
          registry-password: ${{ secrets.GA_TOKEN }}
          name: semcom-components-develop
          location: 'west europe'
          ports: 8080

      - name: Deploy semcom demo on develop
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: semcom-demo-app-develop
          image: ghcr.io/digita-ai/semcom-demo-app:${{ steps.extract-tag.outputs.tag }}
          registry-login-server: ghcr.io
          registry-username: ${{ secrets.GA_USERNAME }}
          registry-password: ${{ secrets.GA_TOKEN }}
          name: semcom-demo-app-develop
          location: 'west europe'
          ports: 4200

      - name: Deploy semcom demo pods on develop
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: semcom-demo-pods-develop
          image: ghcr.io/digita-ai/semcom-demo-pods:${{ steps.extract-tag.outputs.tag }}
          registry-login-server: ghcr.io
          registry-username: ${{ secrets.GA_USERNAME }}
          registry-password: ${{ secrets.GA_TOKEN }}
          name: semcom-demo-pods-develop
          location: 'west europe'
          ports: 9000
          command-line: ./node_modules/.bin/community-solid-server -b https://pods.semcom.digita.ai -p 9000 --rootFilePath /tmp/css -c config/config-file.json
